---
 Makefile       |   40 +++++++---------------------------------
 Makefile.cfg   |   39 +++++++++++++++++++++------------------
 gl/Makefile    |    4 +++-
 src/Makefile   |    5 ++---
 utils/Makefile |    6 +++---
 5 files changed, 36 insertions(+), 58 deletions(-)

--- a/Makefile
+++ b/Makefile
@@ -110,10 +110,6 @@ default:
 
 installheaders:
 	@echo Installing header files in $(includedir).
-	@if [ -f /usr/include/vga.h ]; then \
-		rm -f /usr/include/vga.h /usr/include/vgagl.h; \
-		echo Old header files in /usr/include removed.; \
-	fi
 	mkdir -p $(includedir)
 	@cp $(srcdir)/src/vga.h $(includedir)/vga.h
 	@chmod a+r $(includedir)/vga.h
@@ -134,17 +130,6 @@ ifeq (a.out, $(TARGET_FORMAT))
 		chmod a+r $(libdir)/$$foo; \
 	done
 endif
-	@if [ -f /usr/lib/libvga.sa ]; then \
-		rm -f /usr/lib/libvga.sa /usr/lib/libvgagl.sa; \
-		echo Old stubs in /usr/lib removed.; \
-	fi
-	@rm -f $(OBSOLETESHAREDIMAGES)
-ifndef KEEPSHAREDLIBS
-	@echo "Removing shared library images (old & current)..."
-	@for i in $(OBSOLETELDIRS); do \
-	    rm -f `echo $(OBSOLETESHAREDIMAGES) | sed s?/lib/?$$i?g`; \
-         done
-endif
 	mkdir -p $(sharedlibdir)
 	@echo Installing shared library image as \
 		$(addprefix $(sharedlibdir)/,$(notdir $(SHAREDLIBS))).
@@ -153,7 +138,6 @@ endif
 		(cd $(sharedlibdir); \
 		 ln -sf $$foo `echo $$foo | sed 's/\.so\..*/.so/'` ); \
 	done
-	@ldconfig
 
 ifdef INSTALLAOUTDIR
 
@@ -169,7 +153,6 @@ installaoutcompat:
 		(cd $(TOPDIR)/$(INSTALLAOUTDIR); \
 		 ln -sf $$foo `echo $$foo | sed 's/\.so\..*/.so/'` ); \
 	done
-	@ldconfig
 
 else
 
@@ -180,10 +163,8 @@ endif
 
 installstaticlib: static
 	@echo Installing static libraries in $(libdir).
-	@rm -f /usr/lib/libvga.a
 	@$(INSTALL_DATA) staticlib/libvga.a $(libdir)/libvga.a
 	@chmod a+r $(libdir)/libvga.a
-	@rm -f /usr/lib/libvgagl.a
 	@$(INSTALL_DATA) staticlib/libvgagl.a $(libdir)/libvgagl.a
 	@chmod a+r $(libdir)/libvgagl.a
 
@@ -192,29 +173,23 @@ installutils: textutils lrmi
 		echo No $(bindir) directory, creating it.; \
 		mkdir $(bindir); \
 	fi
-	@if [ -f /usr/bin/restorefont ]; then \
-		echo Removing old utilities in /usr/bin.; \
-		for x in $(UTILS); do rm -f /usr/bin/$$x; done; \
-	fi
-	@if [ -f /usr/bin/convfont ]; then \
-		echo Removing inappropriate utilities in /usr/bin.; \
-		rm -f /usr/bin/convfont /usr/bin/setmclk; \
-	fi
 	@echo Installing textmode utilities in $(bindir):
 	@echo "restorefont:      Save/restore textmode font."
-	@cp utils/restorefont $(bindir)
+	@$(INSTALL_SUID) utils/restorefont $(bindir)
 	@echo "restorepalette:   Set standard VGA palette."
-	@cp utils/restorepalette $(bindir)
+	@$(INSTALL_SUID) utils/restorepalette $(bindir)
 	@echo "dumpreg:          Write ASCII dump of SVGA registers."
-	@cp utils/dumpreg $(bindir)
+	@$(INSTALL_SUID) utils/dumpreg $(bindir)
 	@echo "restoretextmode:  Save/restore textmode registers."
-	@cp utils/restoretextmode $(bindir)
+	@$(INSTALL_SUID) utils/restoretextmode $(bindir)
 	@echo "textmode:         Script that tries to restore textmode."
 	@cp utils/textmode $(bindir)
 	@echo "savetextmode:     Script that saves textmode information used by 'textmode'."
 	@cp utils/savetextmode $(bindir)
-	@echo "mode3:       Restore textmode by setting VESA mode 3."
+	@echo "mode3:            Restore textmode by setting VESA mode 3."
 	@cp lrmi-0.6m/mode3 $(bindir)
+	@echo "vga_reset:        Restore textmode by resetting graphic board."
+	@cp lrmi-0.6m/vga_reset $(bindir)
 	@echo "Installing keymap utilities in $(bindir):"
 	@echo "svgakeymap:       Perl script that generates scancode conversion maps."
 	@cp utils/svgakeymap $(bindir)
@@ -462,7 +437,6 @@ $(BACKUP): configaout
 
 distclean:
 	(cd $(srcdir)/doc; $(MAKE) clean)
-	(cd $(srcdir)/doc; $(MAKE) ../0-README)
 	(cd $(srcdir)/src; $(MAKE) clean)
 	(cd $(srcdir)/gl; $(MAKE) clean)
 	(cd $(srcdir)/utils; $(MAKE) clean)
--- a/Makefile.cfg
+++ b/Makefile.cfg
@@ -126,15 +126,15 @@ INSTALLMAN = installman
 INCLUDE_ET4000_DRIVER = y
 INCLUDE_CIRRUS_DRIVER = y
 INCLUDE_TVGA_DRIVER = y
-#INCLUDE_OAK_DRIVER = y
-#INCLUDE_EGA_DRIVER = y
+INCLUDE_OAK_DRIVER = y
+INCLUDE_EGA_DRIVER = y
 INCLUDE_MACH32_DRIVER = y
 INCLUDE_S3_DRIVER = y
-#INCLUDE_ET3000_DRIVER = y
-#INCLUDE_GVGA6400_DRIVER = y
-#INCLUDE_ARK_DRIVER = y
-#INCLUDE_ATI_DRIVER = y
-#INCLUDE_ALI_DRIVER = y
+INCLUDE_ET3000_DRIVER = y
+INCLUDE_GVGA6400_DRIVER = y
+INCLUDE_ARK_DRIVER = y
+INCLUDE_ATI_DRIVER = y
+INCLUDE_ALI_DRIVER = y
 INCLUDE_CHIPS_DRIVER = y
 INCLUDE_APM_DRIVER = y
 INCLUDE_NV3_DRIVER = y
@@ -150,7 +150,9 @@ INCLUDE_LAGUNA_DRIVER = y
 INCLUDE_NEO_DRIVER = y
 INCLUDE_R128_DRIVER = y
 INCLUDE_G400_DRIVER = y
+ifndef SUPPRESS_FOR_LIBC5
 INCLUDE_FBDEV_DRIVER = y
+endif
 INCLUDE_SAVAGE_DRIVER = y
 #
 # Comment out any adapter you don't want to autodetect.
@@ -158,15 +160,15 @@ INCLUDE_SAVAGE_DRIVER = y
 INCLUDE_ET4000_DRIVER_TEST = y
 INCLUDE_CIRRUS_DRIVER_TEST = y
 INCLUDE_TVGA_DRIVER_TEST = y
-#INCLUDE_OAK_DRIVER_TEST = y
-#INCLUDE_EGA_DRIVER_TEST = y
+INCLUDE_OAK_DRIVER_TEST = y
+INCLUDE_EGA_DRIVER_TEST = y
 INCLUDE_MACH32_DRIVER_TEST = y
-#INCLUDE_GVGA6400_DRIVER_TEST = y
+INCLUDE_GVGA6400_DRIVER_TEST = y
 INCLUDE_S3_DRIVER_TEST = y
-#INCLUDE_ET3000_DRIVER_TEST = y
+INCLUDE_ET3000_DRIVER_TEST = y
 #INCLUDE_ARK_DRIVER_TEST = y
-#INCLUDE_ATI_DRIVER_TEST = y
-#INCLUDE_ALI_DRIVER_TEST = y
+INCLUDE_ATI_DRIVER_TEST = y
+INCLUDE_ALI_DRIVER_TEST = y
 INCLUDE_CHIPS_DRIVER_TEST = y
 INCLUDE_APM_DRIVER_TEST = y
 INCLUDE_NV3_DRIVER_TEST = y
@@ -270,9 +272,9 @@ INCLUDES = -I$(srcdir)/include -I.
 CFLAGS   = $(WARN) $(DLLFLAGS) $(INCLUDES) $(OPTIMIZE) $(DEFINES)
 # ELF doesn't like -N. It is beneficial for small tools with a.out
 ifeq (a.out, $(TARGET_FORMAT))
-	LDFLAGS   = -N -s
+	LDFLAGS   = -N 
 else
-	LDFLAGS   = -s
+	LDFLAGS   = 
 endif
 
 # Uncomment the following if you are compiling a.out shared libraries
@@ -289,6 +291,7 @@ endif
 
 # Utilites used.
 AR	  = ar
-INSTALL_PROGRAM	= install -c -s -m 755 -o root -g bin
-INSTALL_SHLIB	= install -c -m 755 -o root -g bin
-INSTALL_DATA	= install -c -m 644 -o root -g bin
+INSTALL_PROGRAM	= install -c -m 755 -o root -g root
+INSTALL_SUID	= install -c -m 4755 -o root -g root
+INSTALL_SHLIB	= install -c -m 755 -o root -g root
+INSTALL_DATA	= install -c -m 644 -o root -g root
--- a/gl/Makefile
+++ b/gl/Makefile
@@ -10,6 +10,8 @@ include ../Makefile.cfg
 srcdir    = ..
 VPATH     = $(srcdir)/gl
 
+INCLUDES += -I$(srcdir)/src
+
 ifeq (a.out, $(TARGET_FORMAT))
   DEFINES += -DSVGA_AOUT
 endif
@@ -30,7 +32,7 @@ all:	libvgagl.a
 
 libvgagl.so.$(VERSION): $(MODULES)
 	$(CC) -s -shared -Wl,-soname,libvgagl.so.$(MAJOR_VER) -o libvgagl.so.$(VERSION) \
-	  $(MODULES)
+	  $(MODULES) $(SHLIBLIBS)
 
 libvgagl.a: $(MODULES)
 	rm -f libvgagl.a
--- a/src/Makefile
+++ b/src/Makefile
@@ -14,7 +14,7 @@ VPATH     = $(srcdir)/src
 # Compiler Section (overrides Makefile.cfg)
 #----------------------------------------------------------------------
 
-INCLUDES += -I$(srcdir)/src
+INCLUDES += -I$(srcdir)/src -I$(srcdir)/src/config
 
 #----------------------------------------------------------------------
 # Rules Section
@@ -388,11 +388,10 @@ all:	libvga.so.$(VERSION)
 # These rules are for ELF only.
 libvga.so.$(VERSION): $(ALLOBJS)
 	$(CC) -s -shared -Wl,-soname,libvga.so.$(MAJOR_VER) \
-	  -o libvga.so.$(VERSION) $(ALLOBJS) -lm
+	  -o libvga.so.$(VERSION) $(ALLOBJS) $(SHLIBLIBS) -lm
 
 $(sharedlibdir)/libvga.so.$(VERSION): libvga.so.$(VERSION)
 	$(INSTALL_PROGRAM) $< $(sharedlibdir)/$<
-	ldconfig
 
 install: $(sharedlibdir)/libvga.so.$(VERSION)
 
--- a/utils/Makefile
+++ b/utils/Makefile
@@ -13,9 +13,10 @@ VPATH     = $(srcdir)/utils
 # Compiler Section (overrides Makefile.cfg)
 #----------------------------------------------------------------------
 
-CFLAGS = $(WARN) $(OPTIMIZE) -I../include
+CFLAGS = $(WARN) $(OPTIMIZE) -I../include -I$(srcdir)/src
 #Use the next one for the Alpha/AXP if you need it
 #LDFLAGS = -L../staticlib 
+LDFLAGS = -L$(srcdir)/sharedlib
 LIBS = -lvga -lm
 
 #----------------------------------------------------------------------
@@ -32,7 +33,6 @@ OBJECTS = restorefont.o convfont.o resto
 
 .o:
 	$(CC) $(CFLAGS) $(LDFLAGS) -o $* $*.o $(LIBS)
-	chmod 4755 $*
 
 all: $(UTILPROGS)
 .PHONY: all clean cleanbin dep
@@ -56,7 +56,7 @@ install:
 	$(INSTALLPROG) $(UTILPROGS) $(UTILINSTALLDIR)
 
 .depend:
-	gcc -MM $(patsubst %.o,$(srcdir)/utils/%.c,$(OBJECTS)) >.depend
+	gcc -MM -I$(srcdir)/src $(patsubst %.o,$(srcdir)/utils/%.c,$(OBJECTS)) >.depend
 
 #
 # include a dependency file if one exists
